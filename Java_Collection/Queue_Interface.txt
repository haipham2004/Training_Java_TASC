Phạm Ngọc Hải
- Nêu các đặc điểm của Queue Interface, Dequeue Interface 

- Kể ra các class triển khai từ Queue Interface, Dequeue Interface , phân biệt trường hợp sử dụng tương ứng


Trả lời:

Queue Interface trong Java là một cấu trúc dữ liệu theo nguyên tắc FIFO (First-In-First-Out), có nghĩa là phần tử được thêm vào đầu tiên sẽ được loại bỏ đầu tiên.
 Một số đặc điểm chính của Queue bao gồm:
•	Thêm phần tử: sử dụng phương thức add() hoặc offer().
•	Loại bỏ phần tử: sử dụng remove() hoặc poll().
•	Kiểm tra phần tử đầu tiên: sử dụng element() hoặc peek().
Deque Interface (Double-Ended Queue) là một phiên bản mở rộng của Queue, cho phép thêm và loại bỏ phần tử từ cả hai đầu.
 Một số đặc điểm chính của Deque bao gồm:
•	Thêm phần tử: có thể thêm vào đầu hoặc cuối bằng addFirst(), addLast(), offerFirst(), offerLast().
•	Loại bỏ phần tử: có thể loại bỏ từ đầu hoặc cuối bằng removeFirst(), removeLast(), pollFirst(), pollLast().
•	Kiểm tra phần tử: có thể kiểm tra phần tử ở đầu hoặc cuối bằng getFirst(), getLast(), peekFirst(), peekLast().
Bạn
- Kể ra các class triển khai từ Queue Interface, Dequeue Interface , phân biệt trường hợp sử dụng tương ứng

Queue Interface
Các class triển khai từ Queue Interface bao gồm:
LinkedList:

Sử dụng khi: Cần thao tác thêm và xóa phần tử ở bất kỳ vị trí nào.

Ưu điểm: Linh hoạt trong việc thêm/xóa phần tử.

Nhược điểm: Truy cập phần tử theo chỉ số chậm.

PriorityQueue:

Sử dụng khi: Cần lưu trữ các phần tử theo thứ tự ưu tiên.

Ưu điểm: Tự động sắp xếp các phần tử dựa trên thứ tự ưu tiên.

Nhược điểm: Không duy trì thứ tự chèn.

ArrayBlockingQueue:

Sử dụng khi: Cần một hàng đợi có giới hạn kích thước.

Ưu điểm: Hữu ích trong các hệ thống sản xuất-tiêu thụ.

Nhược điểm: Có thể gây chờ đợi khi hàng đợi đầy.


Deque Interface
Các class triển khai từ Deque Interface bao gồm:
LinkedList:

Sử dụng khi: Cần thêm/xóa phần tử từ cả hai đầu.

Ưu điểm: Linh hoạt trong việc thêm/xóa phần tử.

Nhược điểm: Truy cập phần tử theo chỉ số chậm.

ArrayDeque:

Sử dụng khi: Cần hiệu suất cao hơn LinkedList.

Ưu điểm: Hiệu suất cao hơn trong nhiều trường hợp.

Nhược điểm: Giới hạn về kích thước bộ nhớ.

Dùng Queue khi cần một cấu trúc dữ liệu theo FIFO; dùng Deque khi bạn cần thao tác với cả hai đầu của hàng đợi.

